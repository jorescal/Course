 

cd ~/Desktop/'IBM Course'/Github2/GitReps/Course







# First of all, create new Repo on Github

cd ~/Desktop/Github2/GitReps/	# create a new directory on your computer
mkdri Course			# every new directory needs to be create from the command line
cd Course 



git init
git config --global user.email "jorescal@gmail.com"


ls				# make sure you have the files you want to upload on the directory you are seeting


echo "# Data Science Course" >> README.md
git add README.md
git commit  -m "first commit of course notes xx/xx/2020"



git add 'IBM Course 5 Databases and SQL for Data Science.txt'
git add 'for_loops.ipynb'

git commit  -m "commit # upedate XX of course notes date xx/xx/2020"

for_loops.ipynb

git remote add origin git@github.com:jorescal/Course.git
git push -u origin master





********** for every day update 


cd ~/Desktop/Github2/GitReps/Course


git add 'IBM Course 5 Databases and SQL for Data Science.txt'
git add 'for_loops.ipynb'
git commit  -m "commit # XX of course notes date xx/xx/2020"
git push 






Databases and SQL for Data Science



When data is stored in tabular form, the data is organized in tables like in a spreadsheet, which is columns and rows. That's a relational database.A table is a collection of related things like a list of employees or a list of book authors. In a relational database, you can form relationships between tables.



A relational database stores data in a tabular format - i.e. in rows and columns. But not all types of databases use the tabular format.



We will discuss these 5 basic SQL queries in further detail in subsequent lessons:

CREATE

INSERT

SELECT

UPDATE

DELETE




* Data definition language or DDL statements are used to define, change, or drop data. it is used to create objects. The functions used on DDL are CREATE, DROP (It is quite common to issue a DROP before doing a CREATE in test and development scenarios.), )

* Data manipulation language or DML statements are used to read and modify data. functions used on DML are SELECT (The SELECT statement is called a query, and the output we get from executing this query is called a result set or a result table.),



COUNT is a built-in database function that retrieves the number of rows that match the query criteria. select COUNT(*) from tablename. 

DISTINCT is used to remove duplicate values from a result set.

LIMIT is used for restricting the number of rows retrieved from the database. Example, retrieve just the first 10 rows in a table. Select * from tablename LIMIT 10. Select * from MEDALS where YEAR = 2018 LIMIT 5.





***********************  Examples to CREATE and DROP tables (DDL statement).



create a table:

drop table TABLENAME;

create table TABLENAME (
    
	COLUMN1 datatype,
    
	COLUMN2 datatype,
    
	COLUMN3 datatype,
       
	 ...
    
	) ;





Example:
	DROP TABLE country;

	CREATE TABLE country(
    
			id_Author INTEGER PRIMARY KEY (id_Author)NOT NULL,
    
			ccode CHAR(2),

			name VARCHAR(60)
 NOT NULL,
    
			);





*********************** The SELECT statement is called "query"( DML statement to read and modify ) 


How to use SELECT statement


	select COLUMN1, COLUMN2, ... from TABLE1 ;





Example:

	select ID, NAME from COUNTRY ;


To retrieve all columns from the COUNTRY table we could use "*" instead of specifying individual column names:

	select * from COUNTRY ;



The WHERE clause can be added to your query to filter results or get specific rows of data. To retrieve data for all rows in the COUNTRY table where the ID is less than 5:



	select * from COUNTRY where ID < 5 ;





In case of character based columns the values of the predicates in the where clause need to be enclosed in single quotes. To retrieve the data for the country with country code "CA" we would issue:

	select * from COUNTRY where CCODE = 'CA'; 

		or

	select (columnname) from tablename where columnname =  B1 ;






*********************** Expressions that are used with select statements (COUNT, DISTINCT, LIMIT,    ). 



COUNT is a built-in database function that retrieves the number of rows that match the query criteria. For example, get the total number of rows in a given table: 


	select COUNT(*) from tablename. 

		OR

	select DISTINCT (columnname) from tablename.

		
			example:Select COUNT(COUNTRY) from MEDALS 
					where COUNTRY='CANADA.' 




DISTINCT is used to remove duplicate values from a result set. Example, to retrieve unique values in a column, 



	select DISTINCT (*) from tablename. 

			OR

	select DISTINCT (columnname) from tablename. 


			example: select DISTINCT (COUNTRY) from MEDALS
					where COUNTRY='CANADA.' 


LIMIT is used for restricting the number of rows retrieved from the database. Example, retrieve just the first 10 rows in a table.

 
	Select * from tablename LIMIT 10. 

			example: Select * from MEDALS LIMIT 10. 







*********************** INSERT statement ( DML statement to read and modify)



The INSERT statement is used to add new rows to a table. The INSERT statement is one of the data manipulation language statements. Data manipulation language statements or DML statements are used to read and modify data.


The syntax of the INSERT statement looks like this, 

INSERT INTO "table name", 
	(["column name", "column name", "column name", ...]), 
	VALUES
		(["A1", values, values, values, ...]),
		(["A2", values, values, values, ...]),
		...


In this statement, table name identifies the table, the column name list identifies each column in the table, and the values clause specifies the data values to be added to the columns in the table. 






*********************** UPDATE statement and the DELETE statement ( DML statement to read and modify). 



The syntax of the UPDATE statement looks like this, 


	UPDATE [TableName] SET [ColumnName] = [Value] ]> <WHERE [Condition] >. 


Example

	
	UPDATE author SET LasName = "katta" 
		WHERE author_id = a2



The rows are removed with the DELETE statement. The syntax of the DELETE statement looks like this, 


	DELETE FROM [TableName] <WHERE [Condition] >

Example

	DELETE FROM author WHERE author_id IN ("A2", "A3")



The rows to be removed are specified in the WHERE condition. Note that if you do not specify the WHERE clause, all the rows in the table will be removed. 






***********************  Information and Data Models


Entities: Are a group of Tables.


Atribute: Entities have attributes, which are the data elements that characterize the entity. Attributes tell us more about the entity. Entities can be a noun, person, place, or thing.


ERD: stands for "Entity Relationship Diagram". It represents a collection of entities and their relationships. The building blocks of an ER diagram are entities and attributes. In an ER diagram, an entity is drawn as a rectangle, and attributes are drawn as ovals.





ER model: stands for "Entity Relationship model" and it is used as a tool to design relational databases. In the ER model, entities are objects that exist independently of any other entities in the database. 




INFORMATION MODEL	 is an abstract formal representation of entities that includes their properties, relationships, and the operations that can be performed on them. The most familiar is the hierarchical, typically used to show organization charts. 



DATA MODELS 		are defined in a more concrete level, are specific, and include details. A data model is the blueprint of any database system. 



		NOTE 
		The relational model is the most used data model for databases, because this model allows for data 		independence. Data is stored in simple data structure tables. This provides logical data independence, physical 		data independence, and physical storage independence. 

































